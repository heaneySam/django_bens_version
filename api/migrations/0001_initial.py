# Generated by Django 5.2 on 2025-04-21 20:04

import django.contrib.auth.models
import django.contrib.auth.validators
import django.contrib.postgres.constraints
import django.contrib.postgres.fields.ranges
import django.contrib.postgres.indexes
import django.db.models.deletion
import django.utils.timezone
import simple_history.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('iso_code', models.CharField(max_length=2, unique=True)),
                ('region', models.CharField(blank=True, default='', max_length=100)),
                ('subregion', models.CharField(blank=True, default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CoverageType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True)),
                ('description', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='UnderwritingEntity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, default='', max_length=255)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('is_lloyds_syndicate', models.BooleanField(default=False)),
                ('address', models.CharField(blank=True, default='', max_length=500)),
                ('country', models.CharField(blank=True, default='', max_length=100)),
                ('financial_rating', models.CharField(blank=True, default='', max_length=50)),
                ('am_best_rating', models.CharField(blank=True, default='', max_length=50)),
                ('sp_rating', models.CharField(blank=True, default='', max_length=50)),
                ('moodys_rating', models.CharField(blank=True, default='', max_length=50)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('SUSPENDED', 'Suspended')], default='ACTIVE', max_length=50)),
                ('label', models.CharField(blank=True, default='', max_length=255)),
                ('entity_type', models.CharField(blank=True, default='', max_length=255)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ManagingAgency',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, default='', max_length=255)),
                ('address', models.CharField(blank=True, default='', max_length=500)),
                ('contact_info', models.CharField(blank=True, default='', max_length=500)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Risk',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('base_risk_id', models.UUIDField(db_index=True, default=uuid.uuid4)),
                ('version', models.IntegerField()),
                ('name', models.CharField(blank=True, default='', max_length=255)),
                ('description', models.TextField(blank=True, default='')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lifecycle_stage', models.CharField(choices=[('SUBMITTED', 'Submitted'), ('UNDER_REVIEW', 'Under Review'), ('INFO_REQUESTED', 'Info Requested'), ('QUOTED', 'Quoted'), ('CONTRACT_DRAFTING', 'Contract Drafting'), ('LIVE', 'Live'), ('CANCELLED', 'Cancelled'), ('EXPIRED', 'Expired'), ('DECLINED', 'Declined'), ('CLOSED', 'Closed'), ('ARCHIVED', 'Archived')], db_index=True, default='SUBMITTED', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('enquiry_data', models.JSONField(blank=True, default=dict)),
                ('binding_data', models.JSONField(blank=True, default=dict)),
                ('risk_claim_status', models.CharField(choices=[('NONE', 'None'), ('WATCHLIST', 'Watchlist'), ('NOTIFIED', 'Notified'), ('UNDER_REVIEW', 'Under Review'), ('PAID', 'Paid'), ('RECOVERY_PENDING', 'Recovery Pending'), ('DENIED', 'Denied'), ('CLOSED', 'Closed')], db_index=True, default='NONE', max_length=50)),
                ('effective_from', models.DateTimeField(blank=True, null=True)),
                ('effective_to', models.DateTimeField(blank=True, null=True)),
                ('source', models.CharField(blank=True, default='internal', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BuyerTable',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, default='', max_length=255)),
                ('description', models.TextField(blank=True, default='')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buyer_tables', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Buyer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, default='', max_length=255)),
                ('identifier', models.CharField(blank=True, default='', max_length=255)),
                ('country', models.CharField(blank=True, default='', max_length=100)),
                ('exposure_requested', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('insurance_type', models.CharField(choices=[('QUOTA_SHARE', 'Quota Share'), ('EXCESS_OF_LOSS', 'Excess of Loss'), ('TOP_UP', 'Top Up'), ('FULL_COVER', 'Full Cover'), ('UNINSURED', 'Uninsured')], default='QUOTA_SHARE', max_length=50)),
                ('excess_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('buyer_table', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buyers', to='api.buyertable')),
            ],
        ),
        migrations.CreateModel(
            name='CountryGrade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.DecimalField(decimal_places=2, max_digits=4)),
                ('as_of_date', models.DateField()),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='api.country')),
            ],
            options={
                'ordering': ['-as_of_date'],
            },
        ),
        migrations.CreateModel(
            name='Coverage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('coverage_percent', models.DecimalField(decimal_places=2, default=100, max_digits=5)),
                ('amount_covered', models.DecimalField(decimal_places=2, max_digits=15)),
                ('period', django.contrib.postgres.fields.ranges.DateTimeRangeField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coverages', to='api.buyer')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coverages_created', to=settings.AUTH_USER_MODEL)),
                ('coverage_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='coverages', to='api.coveragetype')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalBuyer',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('name', models.CharField(blank=True, default='', max_length=255)),
                ('identifier', models.CharField(blank=True, default='', max_length=255)),
                ('country', models.CharField(blank=True, default='', max_length=100)),
                ('exposure_requested', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('insurance_type', models.CharField(choices=[('QUOTA_SHARE', 'Quota Share'), ('EXCESS_OF_LOSS', 'Excess of Loss'), ('TOP_UP', 'Top Up'), ('FULL_COVER', 'Full Cover'), ('UNINSURED', 'Uninsured')], default='QUOTA_SHARE', max_length=50)),
                ('excess_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('buyer_table', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.buyertable')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical buyer',
                'verbose_name_plural': 'historical buyers',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalBuyerTable',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('name', models.CharField(blank=True, default='', max_length=255)),
                ('description', models.TextField(blank=True, default='')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical buyer table',
                'verbose_name_plural': 'historical buyer tables',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCoverage',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('coverage_percent', models.DecimalField(decimal_places=2, default=100, max_digits=5)),
                ('amount_covered', models.DecimalField(decimal_places=2, max_digits=15)),
                ('period', django.contrib.postgres.fields.ranges.DateTimeRangeField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('buyer', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.buyer')),
                ('coverage_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.coveragetype')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical coverage',
                'verbose_name_plural': 'historical coverages',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLloydsSyndicate',
            fields=[
                ('syndicate_number', models.CharField(blank=True, default='', max_length=50)),
                ('syndicate_year', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical lloyds syndicate',
                'verbose_name_plural': 'historical lloyds syndicates',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalManagingAgency',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('name', models.CharField(blank=True, default='', max_length=255)),
                ('address', models.CharField(blank=True, default='', max_length=500)),
                ('contact_info', models.CharField(blank=True, default='', max_length=500)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical managing agency',
                'verbose_name_plural': 'historical managing agencys',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalRisk',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('base_risk_id', models.UUIDField(db_index=True, default=uuid.uuid4)),
                ('version', models.IntegerField()),
                ('name', models.CharField(blank=True, default='', max_length=255)),
                ('description', models.TextField(blank=True, default='')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('lifecycle_stage', models.CharField(choices=[('SUBMITTED', 'Submitted'), ('UNDER_REVIEW', 'Under Review'), ('INFO_REQUESTED', 'Info Requested'), ('QUOTED', 'Quoted'), ('CONTRACT_DRAFTING', 'Contract Drafting'), ('LIVE', 'Live'), ('CANCELLED', 'Cancelled'), ('EXPIRED', 'Expired'), ('DECLINED', 'Declined'), ('CLOSED', 'Closed'), ('ARCHIVED', 'Archived')], db_index=True, default='SUBMITTED', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('enquiry_data', models.JSONField(blank=True, default=dict)),
                ('binding_data', models.JSONField(blank=True, default=dict)),
                ('risk_claim_status', models.CharField(choices=[('NONE', 'None'), ('WATCHLIST', 'Watchlist'), ('NOTIFIED', 'Notified'), ('UNDER_REVIEW', 'Under Review'), ('PAID', 'Paid'), ('RECOVERY_PENDING', 'Recovery Pending'), ('DENIED', 'Denied'), ('CLOSED', 'Closed')], db_index=True, default='NONE', max_length=50)),
                ('effective_from', models.DateTimeField(blank=True, null=True)),
                ('effective_to', models.DateTimeField(blank=True, null=True)),
                ('source', models.CharField(blank=True, default='internal', max_length=50)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical risk',
                'verbose_name_plural': 'historical risks',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalUnderwritingEntity',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('name', models.CharField(blank=True, default='', max_length=255)),
                ('code', models.CharField(db_index=True, max_length=50)),
                ('is_lloyds_syndicate', models.BooleanField(default=False)),
                ('address', models.CharField(blank=True, default='', max_length=500)),
                ('country', models.CharField(blank=True, default='', max_length=100)),
                ('financial_rating', models.CharField(blank=True, default='', max_length=50)),
                ('am_best_rating', models.CharField(blank=True, default='', max_length=50)),
                ('sp_rating', models.CharField(blank=True, default='', max_length=50)),
                ('moodys_rating', models.CharField(blank=True, default='', max_length=50)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('SUSPENDED', 'Suspended')], default='ACTIVE', max_length=50)),
                ('label', models.CharField(blank=True, default='', max_length=255)),
                ('entity_type', models.CharField(blank=True, default='', max_length=255)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical underwriting entity',
                'verbose_name_plural': 'historical underwriting entitys',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LloydsSyndicate',
            fields=[
                ('underwriting_entity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='api.underwritingentity')),
                ('syndicate_number', models.CharField(blank=True, default='', max_length=50)),
                ('syndicate_year', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.AddIndex(
            model_name='underwritingentity',
            index=models.Index(fields=['code'], name='ue_code_idx'),
        ),
        migrations.AddIndex(
            model_name='underwritingentity',
            index=models.Index(fields=['is_lloyds_syndicate'], name='ue_lloyds_idx'),
        ),
        migrations.AddField(
            model_name='historicallloydssyndicate',
            name='underwriting_entity',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.underwritingentity'),
        ),
        migrations.AddField(
            model_name='historicalcoverage',
            name='underwriting_entity',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.underwritingentity'),
        ),
        migrations.AddField(
            model_name='coverage',
            name='underwriting_entity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coverages', to='api.underwritingentity'),
        ),
        migrations.AddField(
            model_name='historicallloydssyndicate',
            name='managing_agency',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.managingagency'),
        ),
        migrations.AddField(
            model_name='risk',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='risks', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalbuyertable',
            name='risk',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.risk'),
        ),
        migrations.AddField(
            model_name='buyertable',
            name='risk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buyer_tables', to='api.risk'),
        ),
        migrations.AddIndex(
            model_name='buyer',
            index=models.Index(fields=['buyer_table'], name='buyer_bt_idx'),
        ),
        migrations.AddIndex(
            model_name='buyer',
            index=models.Index(fields=['is_active'], name='buyer_active_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='countrygrade',
            unique_together={('country', 'as_of_date')},
        ),
        migrations.AddField(
            model_name='lloydssyndicate',
            name='managing_agency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='syndicates', to='api.managingagency'),
        ),
        migrations.AddIndex(
            model_name='coverage',
            index=django.contrib.postgres.indexes.GistIndex(fields=['period'], name='coverage_period_gist'),
        ),
        migrations.AddIndex(
            model_name='coverage',
            index=models.Index(fields=['buyer'], name='cov_buyer_idx'),
        ),
        migrations.AddIndex(
            model_name='coverage',
            index=models.Index(fields=['underwriting_entity'], name='cov_ue_idx'),
        ),
        migrations.AddConstraint(
            model_name='coverage',
            constraint=django.contrib.postgres.constraints.ExclusionConstraint(expressions=[('buyer', '='), ('underwriting_entity', '='), ('period', '&&')], name='no_overlap_per_buyer_entity'),
        ),
        migrations.AddIndex(
            model_name='risk',
            index=models.Index(fields=['base_risk_id', 'version'], name='risk_base_version_idx'),
        ),
        migrations.AddIndex(
            model_name='risk',
            index=models.Index(fields=['lifecycle_stage'], name='risk_stage_idx'),
        ),
        migrations.AddIndex(
            model_name='risk',
            index=models.Index(fields=['is_active'], name='risk_active_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='risk',
            unique_together={('base_risk_id', 'version')},
        ),
        migrations.AddIndex(
            model_name='buyertable',
            index=models.Index(fields=['risk'], name='bt_risk_idx'),
        ),
        migrations.AddIndex(
            model_name='buyertable',
            index=models.Index(fields=['is_active'], name='bt_active_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='buyertable',
            unique_together={('risk', 'name')},
        ),
    ]
